/*K번째수

문제 설명
배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.

예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면

array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.
1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.
2에서 나온 배열의 3번째 숫자는 5입니다.
배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.

제한사항
array의 길이는 1 이상 100 이하입니다.
array의 각 원소는 1 이상 100 이하입니다.
commands의 길이는 1 이상 50 이하입니다.
commands의 각 원소는 길이가 3입니다.
입출력 예
array	commands	return
[1, 5, 2, 6, 3, 7, 4]	[[2, 5, 3], [4, 4, 1], [1, 7, 3]]	[5, 6, 3]
입출력 예 설명
[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.
[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.
[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.


問題の説明
配列arrayのi番目の数字からj番目の数字まで切りソートしたとき、k番目の数を入手します。

例えばarrayが[1、5、2、6、3、7、4、i = 2、j = 5、k = 3であれば、

arrayの2番目から5番目まで切る[5、2、6、3]です。
1から出てきた配列をソートすると、[2、3、5、6]です。
2から出た配列の3番目の数字は5です。
配列array [i、j、k]を元素としての2次元配列commandsがパラメータとして与えられるとき、commandsのすべての要素について、前述の演算を適用したとき出てきた結果を配列に入れてreturnするようsolution関数を作成してください。

制限事項
arrayの長さは、1以上100以下です。
arrayの各要素は、1以上100以下です。
commandsの長さは、1以上の50以下です。
commandsの各要素は、長さが3です。
入出力の例
array commands return
[1、5、2、6、3、7、4] [2、5、3、4、4、1、1、7、3] [5、6、3]
入出力例の説明
[1、5、2、6、3、7、4]を2回目から5回目まで切った後、並べ替えます。 [2、3、5、6]の三番目の数字は5です。
[1、5、2、6、3、7、4]を4回目から4回目まで切った後、並べ替えます。 [6]の最初の数字は6です。
[1、5、2、6、3、7、4]を1回目から7回目までカットします。 [1、2、3、4、5、6、7]の三番目の数字は3です。

*/


function solution(array, commands) {
  const result = [];
  const cutArray = [];
  
  for (let i = 0; i < commands.length; i++) {
    let commandEachArrayLastElement = commands[i].slice(-1);
      
    cutArray[i] = array.slice(commands[i][0] -1, commands[i][1]);
    cutArray[i].sort(function(a, b) {
      return a - b;
    });
     result[i] = (cutArray[i][commandEachArrayLastElement-1]);
  }  
  return result;
}


